class Solution {
     int start, end;
    public String longestPalindrome(String s) {
        int len = s.length();
        if(len < 2) return s;
        for(int i = 0; i < len - 1 ; i++) {
                //if length is even or odd 
                longestPalindrome(s, i, i);
                    longestPalindrome(s, i, i+1);
            
        }
        return s.substring(start,start+end);
    }
    
    public void longestPalindrome(String s, int j, int k) {
    //updating pointers to get the right start and end index of the substring
        while(j >= 0 && k < s.length() && s.charAt(j) == s.charAt(k)) {
            j--;
            k++;
        }
        if(end < k - j - 1) {
            start = j+1;
            end = k - j - 1;
        }
    }
}

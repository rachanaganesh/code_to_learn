Solution 1:

class Solution {
    public int findKthLargest(int[] nums, int k) {
      //use min heap and poll elements until you reach the kth index position and peek
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for(int i : nums) {
            pq.offer(i);
        }
         while(pq.size() > k){
             pq.poll();
         }
        return pq.peek();
    }
}


Solution 2:

class Solution {
    public int findKthLargest(int[] nums, int k) {
        Arrays.sort(nums);
        return nums[nums.length-k];
  }
}
